// main global script file

// called when the game starts, before the first room is loaded
function game_start()
{
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
  UpdatePlayerTarget();
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
  
}

// called when a key is pressed
function on_key_press(eKeyCode keycode, int mod)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyF4)
  {
    // Ctrl-Q will quit the game
    QuitGame(0);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (mod & eKeyModCtrl)
  {
    if (keycode == eKeyS)
    {
      // Ctrl-S will give the player all defined inventory items
      Debug(0, 0);
    }
    else if (keycode == eKeyV)
    {
      // Ctrl-V will show game engine version and build date
      Debug(1, 0);
    }
    else if (keycode == eKeyA)
    {
      // Ctrl-A will show walkable areas
      Debug(2, 3);
    }
    else if (keycode == eKeyX)
    {
      // Ctrl-X will let the player teleport to any room
      Debug(3, 0);
    }
  }
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    if(!CanPlayerMove){return;}
    
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    if(!CanPlayerMove){return;}
    
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}

function dialog_request(int param) {
}
function gGui1_OnClick(GUI *theGui, MouseButton button)
{

}

function Enter_OnClick(GUIControl *control, MouseButton button)
{
  if( Contrasena.Text == "KINGER"){
    
    Contrasena.TextColor = 1638;
    Contrasena.Text = "Contraseña correcta" ;
    Wait(50);
    InputTeclado.Visible = false;
    InputTeclado.Clickable = false;   
    HavePomniKey = true ;
    StartDialogue(0 ,  "Oh , por fin puedo entrar a mi cuarto");
    }else{
      
      Contrasena.TextColor = 63488;
      Contrasena.Text = "Contraseña incorrecta" ;
      Wait(80);
       Contrasena.TextColor = 0;
      Contrasena.Text = "" ;
      }
}


function Salir_OnClick(GUIControl *control, MouseButton button)
{
  ContrasenaInput = "";
 InputTeclado.Visible = false;
 InputTeclado.Clickable = false;
}

function Q_OnClick(GUIControl *control, MouseButton button)
{
  
  Contrasena.Text = Contrasena.Text.Append("Q");
}

function W_OnClick(GUIControl *control, MouseButton button)
{
  Contrasena.Text = Contrasena.Text.Append("W");
}

function E_OnClick(GUIControl *control, MouseButton button)
{
  Contrasena.Text = Contrasena.Text.Append("E");
}


function R_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("R");
}

function T_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("T");
}

function Y_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("Y");
}

function U_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("U");
}

function I_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("I");
}

function O_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("O");
}

function P_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("P");
}

function A_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("A");
}

function S_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("S");
}

function D_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("D");
}

function F_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("F");
}

function G_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("G");
}

function H_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("H");
}

function J_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("J");
}

function K_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("K");
}

function L_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("L");
}


function Z_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("Z");
}

function X_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("X");
}

function C_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("C");
}

function V_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("V");
}

function B_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("B");
}

function N_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("N");
}

function M_OnClick(GUIControl *control, MouseButton button)
{
Contrasena.Text = Contrasena.Text.Append("M");
}


function Volver_OnClick(GUIControl *control, MouseButton button)
{
   gHintSafeBox.Clickable = false;
   gHintSafeBox.Visible = false;
}
